apiVersion: v1
kind: Template
metadata:
  name: ${GUID}-nexus


objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nexus3
    labels:
      app: nexus3
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: sonatype/nexus3:latest
      importPolicy: {}


- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: nexus-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 4Gi


- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nexus3
    name: nexus3
  spec:
    replicas: 1
    selector:
      app: nexus3
      deploymentconfig: nexus3
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: nexus3
          deploymentconfig: nexus3
      spec:
        containers:
        - image: ''
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nexus3
          ports:
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /repository/maven-public/
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
          - mountPath: /nexus-data
            name: nexus3-volume-1
        restartPolicy: Always
        volumes:
        - name: nexus3-volume-1
          persistentVolumeClaim:
            claimName: nexus-pvc
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus3
        from:
          kind: ImageStreamTag
          name: nexus3:latest
      type: ImageChange



- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      console.alpha.openshift.io/overview-app-route: "false"
      openshift.io/host.generated: "true"
    labels:
      app: nexus3
    name: nexus-registry
  spec:
#    host: ${GUID}-nexus-registry.apps.na39.openshift.opentlc.com
    port:
      targetPort: 5000
    tls:
      termination: edge
    to:
      kind: Service
      name: nexus-registry



- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      console.alpha.openshift.io/overview-app-route: "true"
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: nexus3
    name: nexus3
  spec:
#    host: ${GUID}-nexus.apps.na39.openshift.opentlc.com
    port:
      targetPort: 8081-tcp
    to:
      kind: Service
      name: nexus3



- apiVersion: v1
  kind: Service
  metadata:
    name: nexus-registry
    labels:
      app: nexus3
  spec:
    ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: nexus3
      deploymentconfig: nexus3
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}


- apiVersion: v1
  kind: Service
  metadata:
    name: nexus3
    labels:
      app: nexus3
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: nexus3
      deploymentconfig: nexus3
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}


parameters:
- name: GUID
  required: true
  value:
